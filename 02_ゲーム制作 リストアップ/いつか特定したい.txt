{ // プレイヤーの当たり判定
	Player *pPlayer = GetPlayer();				// 車の情報を取得する

	if (pPlayer->bUse == true)
	{ // 車が使用されていた場合
		if (pPos->x - CAR_WIDTH <= pPlayer->pos.x + CAR_WIDTH
			&& pPos->x + CAR_WIDTH >= pPlayer->pos.x - CAR_WIDTH)
		{ // 車のX幅の中にいた場合
			if (pPosOld->z + CAR_DEPTH <= pPlayer->oldPos.z - CAR_DEPTH
				&& pPos->z + CAR_DEPTH >= pPlayer->pos.z - CAR_DEPTH)
			{//前回の位置がブロックより手前かつ、現在の位置がブロックよりも奥かつだった場合(手前で止められる処理)
				switch (collObject)
				{
				case COLLOBJECTTYPE_POLICE:		// 警察の場合

					//位置をずらす
					pPos->z = pPlayer->pos.z - (PLAY_DEPTH + POLICAR_DEPTH);

					// 移動量を削除
					pMove->x *= 0.95f;

					break;						// 抜け出す

				case COLLOBJECTTYPE_CAR:		// 車の場合

					//位置をずらす
					pPos->z = pPlayer->pos.z - (PLAY_DEPTH + CAR_DEPTH);

					// 移動量を削除
					pMove->x *= 0.95f;

					break;						// 抜け出す
				}
			}							//手前で止められる処理
			else if (pPosOld->z - CAR_DEPTH >= pPlayer->oldPos.z + CAR_DEPTH
				&& pPos->z - CAR_DEPTH <= pPlayer->pos.z + CAR_DEPTH)
			{//前回の位置がプレイヤーの位置よりも奥かつ、現在の位置がプレイヤーの位置よりも手前だった場合(奥で止められる処理)
				switch (collObject)
				{
				case COLLOBJECTTYPE_POLICE:		// 警察の場合

					//位置をずらす
					pPos->z = pPlayer->pos.z + (PLAY_DEPTH + POLICAR_DEPTH);

					// 移動量を削除
					pMove->x *= 0.95f;

					break;						// 抜け出す

				case COLLOBJECTTYPE_CAR:		// 車の場合

					//位置をずらす
					pPos->z = pPlayer->pos.z + (PLAY_DEPTH + CAR_DEPTH);

					// 移動量を削除
					pMove->x *= 0.95f;

					break;						// 抜け出す
				}
			}							//奥で止められる処理
		}

		if (pPos->z - CAR_DEPTH <= pPlayer->pos.z + CAR_DEPTH
			&& pPos->z + CAR_DEPTH >= pPlayer->pos.z - CAR_DEPTH)
		{//塔のZ幅の中にいた場合
			if (pPosOld->x + CAR_WIDTH <= pPlayer->oldPos.x - CAR_WIDTH
				&& pPos->x + CAR_WIDTH >= pPlayer->pos.x - CAR_WIDTH)
			{//前回の位置がブロックの左端より左かつ、現在の位置がブロックの左側より右だった場合(左の処理)
				switch (collObject)
				{
				case COLLOBJECTTYPE_POLICE:		// 警察の場合

					//位置をずらす
					pPos->x = pPlayer->pos.x - (PLAY_WIDTH + POLICAR_WIDTH);

					// 移動量を削除
					pMove->x *= 0.95f;

					break;						// 抜け出す

				case COLLOBJECTTYPE_CAR:		// 車の場合

					//位置をずらす
					pPos->x = pPlayer->pos.x - (PLAY_WIDTH + CAR_WIDTH);

					// 移動量を削除
					pMove->x *= 0.95f;

					break;						// 抜け出す
				}
			}							//左端の処理
			else if (pPosOld->x - CAR_WIDTH >= pPlayer->oldPos.x + CAR_WIDTH
				&& pPos->x - CAR_WIDTH <= pPlayer->pos.x + CAR_WIDTH)
			{//前回の位置がブロックの右端より右かつ、現在の位置がブロックの左側より右だった場合(右の処理)
				switch (collObject)
				{
				case COLLOBJECTTYPE_POLICE:		// 警察の場合

					//位置をずらす
					pPos->x = pPlayer->pos.x + (PLAY_WIDTH + POLICAR_WIDTH);

					// 移動量を削除
					pMove->x *= 0.95f;

					break;						// 抜け出す

				case COLLOBJECTTYPE_CAR:		// 車の場合

					//位置をずらす
					pPos->x = pPlayer->pos.x + (PLAY_WIDTH + CAR_WIDTH);

					// 移動量を削除
					pMove->x *= 0.95f;

					break;						// 抜け出す
				}
			}							//右端の処理
		}
	}
	}