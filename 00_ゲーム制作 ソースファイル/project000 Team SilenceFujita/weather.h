//===================================
//
//天候ヘッダー[weather.h]
//Author 小原立暉
//
//===================================
#ifndef _WEATHER_H_
#define _WEATHER_H_

#include "main.h"

//**********************************************************************************************************************
//	マクロ定義
//**********************************************************************************************************************
#define MAX_RAIN			(512)						// 雨の最大数
#define RAIN_RANGE			(500)						// 雨の降る範囲
#define RAIN_GENERATE		(20)						// 雨の生成数
#define RAIN_MOVE_RANGE		(20)						// 雨の速度の範囲

//**********************************************************************************************************************
//	天気の種類(WEATHERTYPE)
//**********************************************************************************************************************
typedef enum
{
	WEATHERTYPE_SUNNY = 0,		// 晴れの場合
	WEATHERTYPE_RAIN,			// 雨の場合
	WEATHERTYPE_MAX				// この列挙型の総数
}WEATHERTYPE;

//**********************************************************************************************************************
//	構造体定義 (Rain)
//**********************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;				// 位置
	D3DXVECTOR3 move;				// 移動量
	D3DXMATRIX  mtxWorld;			// ワールドマトリックス
	float       fRadius;			// 半径
	bool        bUse;				// 使用状況
}Rain;

//**********************************************************************************************************************
//	プロトタイプ宣言
//**********************************************************************************************************************
void InitWeather(void);		// 天気の初期化処理
void UninitWeather(void);	// 天気の終了処理
void UpdateWeather(void);	// 天気の更新処理
void DrawWeather(void);		// 天気の描画処理
void SetRain(D3DXVECTOR3 pos, D3DXVECTOR3 move, float fRadius);	// 雨の設定処理
WEATHERTYPE GetWeather(void);									// 天気の取得処理

#endif