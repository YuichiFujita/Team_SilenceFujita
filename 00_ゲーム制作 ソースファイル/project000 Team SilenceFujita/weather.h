//===================================
//
//天候ヘッダー[weather.h]
//Author 小原立暉
//
//===================================
#ifndef _WEATHER_H_
#define _WEATHER_H_

#include "main.h"

//**********************************************************************************************************************
//	マクロ定義(雨)
//**********************************************************************************************************************
#define MAX_RAIN			(512)						// 雨の最大数
#define RAIN_RANGE			(900)						// 雨の降る範囲
#define RAIN_GENERATE		(20)						// 雨の生成数
#define RAIN_MOVE_RANGE		(20)						// 雨の速度の範囲
#define SHIFT_RAIN			(150.0f)					// 雨のずらす幅
#define RAIN_RADIUS_X		(0.3f)						// 雨の半径(X軸)
#define RAIN_RADIUS_Y		(4.0f)						// 雨の半径(Y軸)
#define RAIN_HEIGHT			(300.0f)					// 雨の降る高さ
#define RAIN_MOVE_LEAST		(9.0f)						// 移動量の最低限

//**********************************************************************************************************************
//	マクロ定義(雪)
//**********************************************************************************************************************
#define MAX_SNOW			(4096)						// 雪の最大数
#define SNOW_RANGE			(900)						// 雪の降る範囲
#define SNOW_GENERATE		(30)						// 雪の生成数
#define SNOW_MOVE_RANGE		(6)							// 雪の速度の範囲
#define SHIFT_SNOW			(100.0f)					// 雪のずらす幅
#define SNOW_RADIUS_X		(1.2f)						// 雪の半径(X軸)
#define SNOW_RADIUS_Y		(1.2f)						// 雪の半径(Y軸)
#define SNOW_HEIGHT			(300.0f)					// 雪の降る高さ
#define SNOW_MOVE_LEAST		(1.0f)						// 移動量の最低限

//**********************************************************************************************************************
//	天気の種類(WEATHERTYPE)
//**********************************************************************************************************************
typedef enum
{
	WEATHERTYPE_SUNNY = 0,		// 晴れの場合
	WEATHERTYPE_RAIN,			// 雨の場合
	WEATHERTYPE_SNOW,			// 雪の場合
	WEATHERTYPE_THUNDER,		// 雷雨の場合
	WEATHERTYPE_MAX				// この列挙型の総数
}WEATHERTYPE;

//**********************************************************************************************************************
//	構造体定義 (Rain)
//**********************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;				// 位置
	D3DXVECTOR3 move;				// 移動量
	D3DXMATRIX  mtxWorld;			// ワールドマトリックス
	D3DXVECTOR2 fRadius;			// 半径
	bool        bUse;				// 使用状況
}Rain;

//**********************************************************************************************************************
//	構造体定義 (Snow)
//**********************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;				// 位置
	D3DXVECTOR3 move;				// 移動量
	D3DXMATRIX  mtxWorld;			// ワールドマトリックス
	D3DXVECTOR2 fRadius;			// 半径
	bool        bUse;				// 使用状況
}Snow;

//**********************************************************************************************************************
//	プロトタイプ宣言
//**********************************************************************************************************************
void InitWeather(void);			// 天気の初期化処理
void UninitWeather(void);		// 天気の終了処理
void UpdateWeather(void);		// 天気の更新処理
void DrawWeather(void);			// 天気の描画処理
void SetWeather(void);			// 天気の設定処理
WEATHERTYPE GetWeather(void);	// 天気の取得処理

void SetRain(D3DXVECTOR3 pos, D3DXVECTOR3 move, D3DXVECTOR2 fRadius);	// 雨の設定処理
void WeatherRain(void);			// 雨を降らせる処理

void SetSnow(D3DXVECTOR3 pos, D3DXVECTOR3 move, D3DXVECTOR2 fRadius);	// 雪の設定処理
void WeatherSnow(void);			// 雪を降らせる処理

//**********************************************************************************************************************
//	プロトタイプ宣言 (デバッグ用)
//**********************************************************************************************************************
int GetNumWeather(void);	// 雨の総数取得処理

#endif