//======================================================================================================================
//
//	エディットパーティクルヘッダー [EditParticle.h]
//	Author：小原立暉
//
//======================================================================================================================
#ifndef _EDITPARTICLE_H_			// このマクロ定義がされていない場合
#define _EDITPARTICLE_H_			// 二重インクルード防止のマクロを定義する

//**********************************************************************************************************************
//	インクルードファイル
//**********************************************************************************************************************
#include "main.h"

//**********************************************************************************************************************
//	マクロ定義
//**********************************************************************************************************************

//**********************************************************************************************************************
//	構造体定義 (エディットパーティクル)
//**********************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;				// 位置
	D3DXVECTOR3 move;				// 移動量
	D3DXVECTOR3 Speed;				// 速度
	D3DXCOLOR   col;				// 色
	D3DXVECTOR3 Radius;				// 半径
	int         nSpawn;				// 1Fごとのエフェクト数
	float		nRandom;			// ランダムの範囲
	bool		bUse;				// 使用しているかどうか
	int		    nCountPress;		// カウントプレス
	D3DXVECTOR3	fAngle;				// 角度
	int			SpeedRandomX;		//速度のランダムの範囲(X軸)
	int			SpeedRandomY;		//速度のランダムの範囲(Y軸)
	int			SpeedRandomZ;		//速度のランダムの範囲(Z軸)
}EditParticle;

//**********************************************************************************************************************
//	プロトタイプ宣言
//**********************************************************************************************************************
void InitEditParticle(void);		// パーティクルの初期化処理
void UninitEditParticle(void);		// パーティクルの終了処理
void UpdateEditParticle(void);		// パーティクルの更新処理
void DrawEditParticle(void);		// パーティクルの描画処理
EditParticle *GetEditParticle(void);// パーティクルの取得処理

//**********************************************************************************************************************
//	プロトタイプ宣言 (デバッグ用)
//**********************************************************************************************************************

#endif