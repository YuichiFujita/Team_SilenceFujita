//======================================================================================================================
//
//	ジャンクヘッダー [junk.h]
//	Author：小原立暉
//
//======================================================================================================================
#ifndef _JUNK_H_						// このマクロ定義がされていない場合
#define _JUNK_H_						// 二重インクルード防止のマクロを定義する

//**********************************************************************************************************************
//	インクルードファイル
//**********************************************************************************************************************
#include "model.h"
#include "main.h"

//**********************************************************************************************************************
//	マクロ定義
//**********************************************************************************************************************
#define MAX_JUNK		(1024)			// 使用するモデル数 (オブジェクトの最大数)

//**********************************************************************************************************************
//	構造体定義 (Junk)
//**********************************************************************************************************************
typedef struct
{
	D3DXVECTOR3  pos;					// 位置
	D3DXVECTOR3	 move;					// 移動量
	D3DXVECTOR3  rot;					// 向き
	D3DXMATRIX   mtxWorld;				// ワールドマトリックス
	Model        modelData;				// モデル情報
	D3DXMATERIAL matCopy[MAX_MATERIAL];	// マテリアルのコピー
	int          nShadowID;				// 影のインデックス
	int			 nLandCount;			// 着地カウント
	bool         bUse;					// 使用状況
}Junk;

//**********************************************************************************************************************
//	プロトタイプ宣言
//**********************************************************************************************************************
void InitJunk(void);					// オブジェクトの初期化処理
void UninitJunk(void);					// オブジェクトの終了処理
void UpdateJunk(void);					// オブジェクトの更新処理
void DrawJunk(void);					// オブジェクトの描画処理
void SetJunk(D3DXVECTOR3 pos, D3DXVECTOR3 rot);	// オブジェクトの設定処理

//**********************************************************************************************************************
//	プロトタイプ宣言 (デバッグ用)
//**********************************************************************************************************************
int GetNumJunk(void);			// オブジェクトの総数取得処理

#endif