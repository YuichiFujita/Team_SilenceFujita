//======================================================================================================================
//
//	フラッシュ処理 [flash.cpp]
//	Author：小原立暉
//
//======================================================================================================================
//**********************************************************************************************************************
//	インクルードファイル
//**********************************************************************************************************************
#include "flash.h"

//**********************************************************************************************************************
//	マクロ定義
//**********************************************************************************************************************
#define FLASH_LOST_ALPHA	(0.01f)		// フラッシュがなくなるまでのアルファ値

//**********************************************************************************************************************
//	グローバル変数
//**********************************************************************************************************************
LPDIRECT3DVERTEXBUFFER9 g_pVtxBuffFlash = NULL;		// 頂点バッファへのポインタ
Flash g_Flash;				// フラッシュの情報

//======================================================================================================================
//	フラッシュの初期化処理
//======================================================================================================================
void InitFlash(void)
{
	// ポインタを宣言
	LPDIRECT3DDEVICE9 pDevice;	// デバイスへのポインタ (ポインタの宣言だが * はいらない)
	VERTEX_2D *pVtx;			// 頂点情報へのポインタ

	// デバイスの取得
	pDevice = GetDevice();

	// 頂点バッファの生成
	pDevice->CreateVertexBuffer
	( // 引数
		sizeof(VERTEX_2D) * 4,	// 必要頂点数
		D3DUSAGE_WRITEONLY,
		FVF_VERTEX_2D,
		D3DPOOL_MANAGED,
		&g_pVtxBuffFlash,
		NULL
	);

	// フラッシュの情報の初期化
	g_Flash.col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 0.0f);	// 色
	g_Flash.fDestAlpha = 0.0f;	// 目標の透明度
	g_Flash.fDiffAlpha = 0.0f;	// 透明度の差分
	g_Flash.fRevAlpha  = 0.0f;	// 透明度の補正係数
	g_Flash.bUse	   = false;	// 使用状況

	//----------------------------------------------------------------------------------------------------------------------
	//	頂点情報の初期化
	//----------------------------------------------------------------------------------------------------------------------
	// 頂点バッファをロックし、頂点情報へのポインタを取得
	g_pVtxBuffFlash->Lock(0, 0, (void**)&pVtx, 0);

	// 頂点座標を設定
	pVtx[0].pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	pVtx[1].pos = D3DXVECTOR3(SCREEN_WIDTH, 0.0f, 0.0f);
	pVtx[2].pos = D3DXVECTOR3(0.0f, SCREEN_HEIGHT, 0.0f);
	pVtx[3].pos = D3DXVECTOR3(SCREEN_WIDTH, SCREEN_HEIGHT, 0.0f);

	// rhw の設定
	pVtx[0].rhw = 1.0f;
	pVtx[1].rhw = 1.0f;
	pVtx[2].rhw = 1.0f;
	pVtx[3].rhw = 1.0f;

	// 頂点カラーの設定
	pVtx[0].col = g_Flash.col;
	pVtx[1].col = g_Flash.col;
	pVtx[2].col = g_Flash.col;
	pVtx[3].col = g_Flash.col;

	// 頂点バッファをアンロックする
	g_pVtxBuffFlash->Unlock();
}

//======================================================================================================================
//	フラッシュの終了処理
//======================================================================================================================
void UninitFlash(void)
{
	// 頂点バッファの破棄
	if (g_pVtxBuffFlash != NULL)
	{ // 変数 (g_pVtxBuffFlash) がNULLではない場合

		g_pVtxBuffFlash->Release();
		g_pVtxBuffFlash = NULL;
	}
}

//======================================================================================================================
//	フラッシュの更新処理
//======================================================================================================================
void UpdateFlash(void)
{
	// ポインタを宣言
	VERTEX_2D *pVtx;	// 頂点情報へのポインタ

	//--------------------------------------------------------------------------------------------------------------
	//	頂点情報の更新
	//--------------------------------------------------------------------------------------------------------------
	// 頂点バッファをロックし、頂点情報へのポインタを取得
	g_pVtxBuffFlash->Lock(0, 0, (void**)&pVtx, 0);

	if (g_Flash.bUse == true)
	{ // 使用状況

		// 目標の透明度を設定する
		g_Flash.fDestAlpha = 0.0f;

		// 透明度の差分を求める
		g_Flash.fDiffAlpha = g_Flash.fDestAlpha - g_Flash.col.a;

		// 透明度を設定する
		g_Flash.col.a += g_Flash.fDiffAlpha * g_Flash.fRevAlpha;

		if (g_Flash.col.a <= FLASH_LOST_ALPHA)
		{ // 透明度が0.1f以下になった場合

			// 透明度を0.0fにする
			g_Flash.col.a = 0.0f;

			// 使用しない
			g_Flash.bUse = false;
		}

		// 頂点カラーの更新
		pVtx[0].col = g_Flash.col;
		pVtx[1].col = g_Flash.col;
		pVtx[2].col = g_Flash.col;
		pVtx[3].col = g_Flash.col;
	}

	// 頂点バッファをアンロックする
	g_pVtxBuffFlash->Unlock();
}

//======================================================================================================================
//	フラッシュの描画処理
//======================================================================================================================
void DrawFlash(void)
{
	// ポインタを宣言
	LPDIRECT3DDEVICE9 pDevice;	// デバイスへのポインタ (ポインタの宣言だが * はいらない)

	// デバイスの取得
	pDevice = GetDevice();

	// 頂点バッファをデータストリームに設定
	pDevice->SetStreamSource(0, g_pVtxBuffFlash, 0, sizeof(VERTEX_2D));

	// 頂点フォーマットの設定
	pDevice->SetFVF(FVF_VERTEX_2D);

	// テクスチャの設定
	pDevice->SetTexture(0, NULL);

	// ポリゴンの描画
	pDevice->DrawPrimitive(D3DPT_TRIANGLESTRIP, 0, 2);
}

//======================================================================================================================
//	フラッシュの設定処理
//======================================================================================================================
void SetFlash(float fAlpha, float fRevAlpha)
{
	// ポインタを宣言
	VERTEX_2D *pVtx;	// 頂点情報へのポインタ

	//--------------------------------------------------------------------------------------------------------------
	//	頂点情報の更新
	//--------------------------------------------------------------------------------------------------------------
	// 頂点バッファをロックし、頂点情報へのポインタを取得
	g_pVtxBuffFlash->Lock(0, 0, (void**)&pVtx, 0);

	if (g_Flash.bUse == false)
	{ // 使用していない場合

		// 透明度の補正係数を代入
		g_Flash.fRevAlpha = fRevAlpha;

		// フラッシュの情報の初期化
		g_Flash.col		   = D3DXCOLOR(1.0f, 1.0f, 1.0f, fAlpha);	// 色
		g_Flash.fDestAlpha = 0.0f;									// 目標の透明度
		g_Flash.fDiffAlpha = 0.0f;									// 透明度の差分
		g_Flash.bUse	   = true;									// 使用状況

		// 頂点カラーの更新
		pVtx[0].col = g_Flash.col;
		pVtx[1].col = g_Flash.col;
		pVtx[2].col = g_Flash.col;
		pVtx[3].col = g_Flash.col;
	}

	// 頂点バッファをアンロックする
	g_pVtxBuffFlash->Unlock();
}

//======================================================================================================================
// フェードの取得処理
//======================================================================================================================
Flash GetFlash(void)
{
	// フラッシュの情報を返す
	return g_Flash;
}