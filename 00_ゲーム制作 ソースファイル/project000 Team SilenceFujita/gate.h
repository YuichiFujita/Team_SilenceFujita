//======================================================================================================================
//
//	ゲートヘッダー [gate.h]
//	Author：小原立暉
//
//======================================================================================================================
#ifndef _GATE_H_	// このマクロ定義がされていない場合
#define _GATE_H_	// 二重インクルード防止のマクロを定義する

//**********************************************************************************************************************
//	インクルードファイル
//**********************************************************************************************************************
#include "main.h"
#include "model.h"
#include "object.h"

#ifdef _DEBUG	// デバッグ処理

#endif

//**********************************************************************************************************************
//	マクロ定義
//**********************************************************************************************************************
#define MAX_GATE	(32)		// ゲートの最大数

//**********************************************************************************************************************
//	列挙型定義 (BREAKTYPE)
//**********************************************************************************************************************
typedef enum
{ 
	GATESTATE_FLY = 0,			// 空中状態
	GATESTATE_LAND,				// 落下状態
	GATESTATE_BOUND,			// バウンド状態
	GATESTATE_STOP,				// 停止状態
	GATESTATE_MAX,				// この列挙型の総数
} GATESTATE;

//**********************************************************************************************************************
//	構造体定義 (Object)
//**********************************************************************************************************************
typedef struct
{
	D3DXVECTOR3  pos;			// 位置
	D3DXVECTOR3  move;			// 移動量
	D3DXVECTOR3  rot;			// 向き
	D3DXMATRIX   mtxWorld;		// ワールドマトリックス
	Model        modelData;		// モデル情報
	GATESTATE	 state;			// 状態
	Coll_Info    collInfo;		// 当たり判定情報
	bool         bUse;			// 使用状況
}Gate;

//**********************************************************************************************************************
//	プロトタイプ宣言
//**********************************************************************************************************************
void InitGate(void);			// オブジェクトの初期化処理
void UninitGate(void);			// オブジェクトの終了処理
void UpdateGate(void);			// オブジェクトの更新処理
void DrawGate(void);			// オブジェクトの描画処理

void SetGate(D3DXVECTOR3 pos, D3DXVECTOR3 rot);																	// オブジェクトの設定処理
void CollisionGate(D3DXVECTOR3 *pPos, D3DXVECTOR3 *pOldPos, D3DXVECTOR3 *pMove, float fWidth, float fDepth);	// オブジェクトとの当たり判定

Gate *GetGateData(void);		// オブジェクトの取得処理
Collision *GetCollGate(void);	// ゲートの当たり判定の取得処理

//**********************************************************************************************************************
//	プロトタイプ宣言 (デバッグ用)
//**********************************************************************************************************************
int GetNumGate(void);			// オブジェクトの総数取得処理

#endif