//======================================================================================================================
//
//	カーブヘッダー [curve.h]
//	Author：小原立暉
//
//======================================================================================================================
#ifndef _CURVE_H_						// このマクロ定義がされていない場合
#define _CURVE_H_						// 二重インクルード防止のマクロを定義する

//**********************************************************************************************************************
//	インクルードファイル
//**********************************************************************************************************************
#include "main.h"
#include "model.h"

//**********************************************************************************************************************
//	マクロ定義
//**********************************************************************************************************************
#define MAX_CURVEPOINT		(24)		// 曲がり角の最大数
#define SHIFT_CAR_CURVE		(45.0f)		// 車のカーブでずらす幅
#define SHIFT_HUMAN_CURVE	(100.0f)	// 人のカーブでずらす幅

//**********************************************************************************************************************
//	曲がり角で曲がる角度
//**********************************************************************************************************************
typedef enum
{
	CURVE_RIGHT = 0,					//右に曲がる
	CURVE_LEFT,							//左に曲がる
	CURVE_MAX							//この列挙型の総数
}CURVEANGLE;

//**********************************************************************************************************************
//	現在走っている状態
//**********************************************************************************************************************
typedef enum
{
	DASH_RIGHT = 0,						//右に走っている
	DASH_LEFT,							//左に走っている
	DASH_FAR,							//奥に走っている
	DASH_NEAR,							//手前に走っている
	DASH_MAX							//この列挙型の総数
}DASHANGLE;

//**********************************************************************************************************************
//	列挙型定義(CARTYPE)
//**********************************************************************************************************************
typedef enum
{
	CARACT_DASH = 0,					// 通っている
	CARACT_CURVE,						// カーブする
	CARACT_MAX							// この列挙型の総数
}CARACTIONSTATE;

//**********************************************************************************************************************
//	曲がり角の情報の構造体
//**********************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;					// 曲がり角の位置
	CURVEANGLE curveAngle;				// カーブ出来る方向
	int nCurveNumber;					// カーブの番号
	DASHANGLE dashAngle;				// 走っている方向
	bool bDeadEnd;						// 行き止まりかどうか
}CURVEINFO;

//**********************************************************************************************************************
//	構造体定義 (CARCURVE)
//**********************************************************************************************************************
typedef struct
{
	CURVEINFO	   curveInfo;			// 曲がり角の情報
	int			   nSKipCnt;			// スキップする回数
	CARACTIONSTATE actionState;			// 現在の行動
	D3DXVECTOR3	   rotDest;				// 目標の向き
}CARCURVE;

//**********************************************************************************************************************
//	プロトタイプ宣言
//**********************************************************************************************************************
void InitCurveInfo(void);				// カーブの情報の初期化処理
void CurveInfoRotCar(CARCURVE *pCurve, D3DXVECTOR3 *rot, D3DXVECTOR3 *move);				// 車の角度更新・補正処理
CURVEINFO GetCurveInfo(int nID);		// 曲がり角の位置の取得処理
void LoadCurveTxt(void);				// カーブテキストのロード処理

#endif