//======================================================================================================================
//
//	メッシュフィールドヘッダー [meshfield.h]
//	Author：藤田勇一
//
//======================================================================================================================
#ifndef _MESHFIELD_H_			// このマクロ定義がされていない場合
#define _MESHFIELD_H_			// 二重インクルード防止のマクロを定義する

//**********************************************************************************************************************
//	マクロ定義
//**********************************************************************************************************************
#define MAX_MESHFIELD	(512)	// メッシュフィールドの最大数

//**********************************************************************************************************************
//	構造体定義 (MeshField)
//**********************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;			// 位置
	D3DXVECTOR3 rot;			// 向き
	D3DXMATRIX  mtxWorld;		// ワールドマトリックス
	float       fWidth;			// 横幅
	float       fHeight;		// 縦幅
	int         nPartWidth;		// 横の分割数
	int         nPartHeight;	// 縦の分割数
	int         nNumVtx;		// 必要頂点数
	int         nNumIdx;		// 必要インデックス数
	int         nType;			// 種類
	bool        bUse;			// 使用状況
} MeshField;

//**********************************************************************************************************************
//	プロトタイプ宣言
//**********************************************************************************************************************
void InitMeshField(void);					// メッシュフィールドの初期化処理
void UninitMeshField(void);					// メッシュフィールドの終了処理
void UpdateMeshField(void);					// メッシュフィールドの更新処理
void DrawMeshField(bool bMap);				// メッシュフィールドの描画処理
float CollisionMeshField(D3DXVECTOR3 pos);	// メッシュフィールドとの当たり判定
MeshField *GetMeshField(void);				// メッシュフィールドの取得処理


#endif