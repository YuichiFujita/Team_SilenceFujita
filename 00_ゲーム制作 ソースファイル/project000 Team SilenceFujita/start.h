//======================================================================================================================
//
//	スタートヘッダー [start.h]
//	Author：小原立暉
//
//======================================================================================================================
#ifndef _START_H_				// このマクロ定義がされていない場合
#define _START_H_				// 二重インクルード防止のマクロを定義する

//**********************************************************************************************************************
//	マクロ定義
//**********************************************************************************************************************

//**********************************************************************************************************************
//	列挙型定義 (TIMERSTATE)
//**********************************************************************************************************************
typedef enum
{
	STARTSTATE_NONE = 0,		// 無状態
	STARTSTATE_PREFACE_FIRST,	// 前置き前半
	STARTSTATE_PREFACE_SECOND,	// 前置き後半
	STARTSTATE_PREFACE_THIRD,	// 前置き最終(画面からはける)
	STARTSTATE_SIGNAL_MOVE,		// シグナルの移動状態
	STARTSTATE_SIGNAL,			// シグナル状態
	STARTSTATE_GO,				// Go!!状態
	STARTSTATE_MAX				// この列挙型の総数
} STARTSTATE;

//**********************************************************************************************************************
//	プロトタイプ宣言
//**********************************************************************************************************************
void InitStart(void);			// スタートの初期化処理
void UninitStart(void);			// スタートの終了処理
void UpdateStart(void);			// スタートの更新処理
void DrawStart(void);			// スタートの描画処理
STARTSTATE GetStartState(void);	// スタートの状態の取得処理

#endif