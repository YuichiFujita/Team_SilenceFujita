//======================================================================================================================
//
//	メインヘッダー [main.h]
//	Author：藤田勇一
//
//======================================================================================================================
#ifndef _MAIN_H_							// このマクロ定義がされていない場合
#define _MAIN_H_							// 二重インクルード防止のマクロを定義する

//**********************************************************************************************************************
//	インクルードファイル
//**********************************************************************************************************************
#include <windows.h>
#include <stdio.h>
#include <time.h>
#include "d3dx9.h"							// 描画処理に必要
#define  DIRECTINPUT_VERSION	(0x0800)	// ビルド時の警告対処用マクロ
#include "dinput.h"							// 入力処理に必要
#include "xaudio2.h"						// サウンド処理に必要
#include "Xinput.h"							// パッド使用に必要

//**********************************************************************************************************************
//	ライブラリリンク
//**********************************************************************************************************************
#pragma comment(lib, "d3d9.lib")			// 描画処理に必要
#pragma comment(lib, "d3dx9.lib")			// [d3d9.lib]の拡張ライブラリ
#pragma comment(lib, "dxguid.lib")			// DirectXコンポーネント (部品) 使用に必要
#pragma comment(lib, "winmm.lib")			// システム時刻取得に必要
#pragma comment(lib, "dinput8.lib")			// 入力処理に必要
#pragma comment(lib, "xinput.lib")			// パッド使用に必要

//**********************************************************************************************************************
//	マクロ定義
//**********************************************************************************************************************
#define FVF_VERTEX_2D		(D3DFVF_XYZRHW | D3DFVF_DIFFUSE | D3DFVF_TEX1)				// 頂点フォーマット [2D]
#define FVF_VERTEX_3D		(D3DFVF_XYZ | D3DFVF_NORMAL | D3DFVF_DIFFUSE | D3DFVF_TEX1)	// 頂点フォーマット [3D]

#define SCREEN_WIDTH		(1280)			// ウインドウの幅
#define SCREEN_HEIGHT		(720)			// ウインドウの高さ

#define MAX_MODEL_TEXTURE	(10)			// テクスチャの最大数
#define MAX_STRING			(128)			// セットアップ時のテキスト読み込み文字列の最長

#define STAGE_LIMIT_NEAR	(800.0f)		// 移動制限の位置 (手前)
#define STAGE_LIMIT_FAR		(-800.0f)		// 移動制限の位置 (奥)
#define STAGE_LIMIT_RIGHT	(800.0f)		// 移動制限の位置 (右)
#define STAGE_LIMIT_LEFT	(-800.0f)		// 移動制限の位置 (左)
#define STAGE_LIMIT_FIELD	(0.0f)			// 移動制限の位置 (地面)

//**********************************************************************************************************************
//	列挙型定義 (MODE)
//**********************************************************************************************************************
typedef enum
{
	MODE_TITLE = 0,			// タイトル画面
	MODE_GAME,				// ゲーム画面
	MODE_MAX,				// この列挙型の総数
} MODE;

//**********************************************************************************************************************
//	列挙型定義 (TITLESTATE)
//**********************************************************************************************************************
typedef enum
{
	TITLESTATE_NONE = 0,	// 何もしていない状態
	TITLESTATE_MOVE,		// タイトル移動状態
	TITLESTATE_MAX,			// この列挙型の総数
} TITLESTATE;

//**********************************************************************************************************************
//	列挙型定義 (ALPHASTATE)
//**********************************************************************************************************************
typedef enum
{
	ALPHASTATE_NONE = 0,	// 何もしていない状態
	ALPHASTATE_CHANGE,		// 透明度の変更状態
	ALPHASTATE_MAX,			// この列挙型の総数
} ALPHASTATE;

//**********************************************************************************************************************
//	列挙型定義 (DAMAGESTATE)
//**********************************************************************************************************************
typedef enum
{
	DAMAGESTATE_NONE = 0,	// 何もしない状態
	DAMAGESTATE_NORMAL,		// 通常状態
	DAMAGESTATE_DAMAGE,		// ダメージ状態
	DAMAGESTATE_MAX,		// この列挙型の総数
} DAMAGESTATE;

//**********************************************************************************************************************
//	構造体定義 ( 頂点情報 [2D] )
//**********************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;		// 頂点座標
	float       rhw;		// 座標変換用係数 (1.0f で固定)
	D3DCOLOR    col;		// 頂点カラー
	D3DXVECTOR2 tex;		// テクスチャ座標
} VERTEX_2D;

//**********************************************************************************************************************
//	構造体定義 ( 頂点情報 [3D] )
//**********************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;		// 頂点座標
	D3DXVECTOR3 nor;		// 法線ベクトル
	D3DCOLOR    col;		// 頂点カラー
	D3DXVECTOR2 tex;		// テクスチャ座標
} VERTEX_3D;

//**********************************************************************************************************************
//	プロトタイプ宣言
//**********************************************************************************************************************
void SetMode(MODE mode);					// モードの設定処理
LPDIRECT3DDEVICE9 GetDevice(void);			// デバイスの取得処理

#endif