//======================================================================================================================
//
//	タイマーヘッダー [timer.h]
//	Author：藤田勇一
//
//======================================================================================================================
#ifndef _TIMER_H_				// このマクロ定義がされていない場合
#define _TIMER_H_				// 二重インクルード防止のマクロを定義する

//**********************************************************************************************************************
//	マクロ定義
//**********************************************************************************************************************
#define NUM_TIME_GAME	(3600)	// タイマーの初期値 (ゲーム)
#define VAL_TIME_DIGIT	(2)		// タイムの桁数

//**********************************************************************************************************************
//	列挙型定義 (TIMERSTATE)
//**********************************************************************************************************************
typedef enum
{
	TIMERSTATE_NONE = 0,		// 何もしていない状態
	TIMERSTATE_COUNT,			// カウント状態
	TIMERSTATE_END,				// カウント終了状態
	TIMERSTATE_MAX				// この列挙型の総数
} TIMERSTATE;

//**********************************************************************************************************************
//	プロトタイプ宣言
//**********************************************************************************************************************
void InitTimer(void);			// タイマーの初期化処理
void UninitTimer(void);			// タイマーの終了処理
void UpdateTimer(void);			// タイマーの更新処理
void DrawTimer(void);			// タイマーの描画処理
int  GetTime(void);				// タイムの取得処理
TIMERSTATE GetTimerState(void);	// タイマーの状態の取得処理

#endif