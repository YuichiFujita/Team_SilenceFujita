//==============================================
//エディットオブジェクトモードのデバッグ表示
//==============================================
void DrawDebugEditObject(void)
{
	RECT rect = { 0,108,SCREEN_WIDTH,SCREEN_HEIGHT };

	char aStr[512];

	EditObject *edit = GetEditObject();				//エディットオブジェクトの情報を取得する
	EditMaterial Mat = GetCustomMaterial();			//マテリアルの情報を取得する

	//文字列に代入
	sprintf(&aStr[0], "====================================================\nエディットオブジェクトの位置[%.4f,%.4f,%.4f]"
		"\nエディットオブジェクトの向き[%.4f]\nエディットオブジェクトの種類:%d"
		"\nマテリアルの色:[%.2f, %.2f, %.2f]\nオブジェクトの拡大率[%.4f,%.4f,%.4f]"
		, edit->pos.x, edit->pos.y, edit->pos.z, edit->rot.y, edit->nType
		, Mat.EditMaterial[edit->nCntMaterial].MatD3D.Diffuse.r, Mat.EditMaterial[edit->nCntMaterial].MatD3D.Diffuse.g, Mat.EditMaterial[edit->nCntMaterial].MatD3D.Diffuse.b
		, edit->scale.x, edit->scale.y, edit->scale.z);

	//テキストの描画
	g_pFont->DrawText(NULL, &aStr[0], -1, &rect, DT_LEFT, D3DCOLOR_RGBA(255, 255, 255, 255));
}

//==============================================
//エディットビルボードモードのデバッグ表示
//==============================================
void DrawDebugEditBillboard(void)
{
	RECT rect = { 0,108,SCREEN_WIDTH,SCREEN_HEIGHT };

	char aStr[512];

	EditBillboard *Editbillboard = GetEditBillboard();					//エディットビルボードの情報を取得する

	//文字列に代入
	sprintf(&aStr[0], "====================================================\nエディットオブジェクトの位置[%.4f,%.4f,%.4f]\n"
		"エディットオブジェクトの種類:%d\nアニメーション:%d　(0=No,1=Yes)\nアニメーションプレイ:%d　(0=Stop,1=Replay)"
		"\nアニメーションパターン数:%d\nアニメーションカウンター:%d\n色:[%.2f,%.2f,%.2f]\nビルボードの拡大率:[%.4f,%.4f]"
		, Editbillboard->pos.x,Editbillboard->pos.y,Editbillboard->pos.z,Editbillboard->nType,Editbillboard->EditAnim.bAnim, Editbillboard->bAnimReplay, Editbillboard->EditAnim.nAnimPattern, Editbillboard->EditAnim.nAnimCounter, Editbillboard->col.r,
		Editbillboard->col.g, Editbillboard->col.b, Editbillboard->Radius.x, Editbillboard->Radius.y);

	//テキストの描画
	g_pFont->DrawText(NULL, &aStr[0], -1, &rect, DT_LEFT, D3DCOLOR_RGBA(255, 255, 255, 255));
}

//==============================================
//エディットオブジェクト操作説明
//==============================================
void DrawDebugControlObject(void)
{
	RECT rect = { 950,0,SCREEN_WIDTH,SCREEN_HEIGHT };

	char aStr[600];

	//文字列に代入
	sprintf(&aStr[0], "オブジェクトの種類変更:1\n向きのリセット:2\n拡大率のリセット:3\n全体の拡大:4\n全体の縮小:5\n設置するスタイルの変更:6\n"
		"オブジェクトの削除:9\nオブジェクトの設置:0\n"
		"オブジェクトの移動:W/A/S/D\nオブジェクトの向き変更:Q/E\nオブジェクトのX軸の拡大縮小:U/J\nオブジェクトのY軸の拡大縮小:I/K\nオブジェクトのZ軸の拡大縮小:O/L\n"
		"マテリアルのR値の変更:LSHIFT+R/F\nマテリアルのG値の変更:LSHIFT+T/G\nマテリアルのB値の変更:LSHIFT+Y/H\n"
		"マテリアルのリセットR値:LSHIFT+V\nマテリアルのリセットG値:LSHIFT+B\nマテリアルのリセットB値:LSHIFT+N\n"
		"マテリアルの変更:SPACE\nモード切り替え:F2\nセーブ:F3");

	//テキストの描画
	g_pFont->DrawText(NULL, &aStr[0], -1, &rect, DT_LEFT, D3DCOLOR_RGBA(255, 255, 255, 255));
}

//==============================================
//エディットビルボード操作説明
//==============================================
void DrawDebugControlBillboard(void)
{
	RECT rect = { 950,0,SCREEN_WIDTH,SCREEN_HEIGHT };

	char aStr[700];

	//文字列に代入
	sprintf(&aStr[0], "ビルボードの種類変更:1\n拡大率のリセット:3\n全体の拡大:4\n全体の縮小:5\n設置するスタイルの変更:6\n"
		"ビルボードのアニメーション化:7\nビルボードのアニメーション再生:8\nオブジェクトの削除:9\nオブジェクトの設置:0"
		"\nオブジェクトの移動:W/A/S/D\nオブジェクトのX軸の拡大縮小:U/J\nオブジェクトのY軸の拡大縮小:I/K"
		"\n色のR値の変更:LSHIFT+R/F\n色のG値の変更:LSHIFT+T/G\n色のB値の変更:LSHIFT+Y/H\n"
		"色のリセットR値:LSHIFT+V\n色のリセットG値:LSHIFT+B\n色のリセットB値:LSHIFT+N\n"
		"ビルボードのアニメーションの\nパターン数の設定:LSHIFT+↑/↓\nビルボードのアニメーションの\n間隔の設定:LSHIFT+←/→"
		"\nモード切り替え:F2\nセーブ:F3");

	//テキストの描画
	g_pFont->DrawText(NULL, &aStr[0], -1, &rect, DT_LEFT, D3DCOLOR_RGBA(255, 255, 255, 255));
}

//==============================================
//デバッグの表示
//==============================================
void DrawDebug()
{
	int nStyle = GetStyle();			//スタイルの情報を取得する
	int nGameMode = GetGameMode();		//ゲームモードの取得

	//DrawFPSのオンオフスイッチ
#if 1

	if (g_bDispDebug == false)
	{
//デバッグの時のみ表示する
#ifdef _DEBUG

		//FPSの表示
		DrawFPS();

		if (g_mode == MODE_GAME)
		{//ゲームモードの場合
			//カメラのデバッグ表示
			DrawCamera();

			if (nGameMode == GAMEMODE_EDIT)
			{//エディットモードだった場合
				if (nStyle == EDITSTYLE_OBJECT)
				{//オブジェクトスタイルだった場合
					//オブジェクトの操作説明
					DrawDebugControlObject();

					//エディットモードのデバッグ表示
					DrawDebugEditObject();
				}
				else if (nStyle == EDITSTYLE_BILLBOARD)
				{//ビルボードスタイルだった場合
					//ビルボードの操作説明
					DrawDebugControlBillboard();

					//エディットモードのデバッグ表示
					DrawDebugEditBillboard();
				}
			}
		}
#endif
	}

#endif
}